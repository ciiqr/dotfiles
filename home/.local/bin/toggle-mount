#!/usr/bin/env bash

set -e

toggle_mount::usage() {
    echo 'usage: toggle-mount smb|nfs|ssh [user@]host[:][/path]'
    echo '   ie. toggle-mount smb server-data/data'
    echo '   ie. toggle-mount nfs server-data:/data'
    echo '   ie. toggle-mount ssh server-data:/mnt'
}

toggle_mount::send_notification() {
    ~/.scripts/notification.sh send "$@"
}

toggle_mount::get_mount_name() {
    declare mount_name="$1"
    # remove user@
    mount_name="${mount_name#*'@'}"
    # remove :
    mount_name="${mount_name/':'/}"
    # replace / with -
    mount_name="${mount_name//'/'/'-'}"

    echo "$mount_name"
}

toggle_mount::get_mount_destination() {
    declare name="$1"

    declare mount_base_location
    if [[ "$OSTYPE" == darwin* ]]; then
        mount_base_location='/Volumes'
    else
        mount_base_location='/mnt'
    fi

    echo "${mount_base_location}/${name}"
}

toggle_mount::is_mounted() {
    declare mount_destination="$1"

    while read -r line; do
        if [[ "$line" == "$mount_destination" ]]; then
            return 0
        fi
    done <<<"$(mount | cut -d' ' -f3)"

    return 1
}

toggle_mount::smb() {
    declare mount_source="${1%/}"

    declare name
    name="$(toggle_mount::get_mount_name "$mount_source")"
    declare mount_destination
    mount_destination="$(toggle_mount::get_mount_destination "$name")"

    if toggle_mount::is_mounted "$mount_destination"; then
        sudo umount "$mount_destination"
        toggle_mount::send_notification "Unmounted" "$name"
    else
        sudo mkdir -m 0777 -p "$mount_destination"
        # TODO: would be good to support non-guest login as well
        if [[ "$OSTYPE" == darwin* ]]; then
            sudo mount_smbfs -o noperm "//guest@${mount_source}" "$mount_destination"
        else
            declare ret_code
            sudo mount.cifs -o noperm,guest "//${mount_source}" "$mount_destination" || ret_code="$?"
            if [[ "$ret_code" == '32' ]]; then
                echo 'sorry, mount is broken, instead try:'
                echo "mount: gio mount -a smb://${mount_source} && ls -l \"/run/user/\${UID}/gvfs/\""
                echo "unmount: gio mount -a -u smb://${mount_source}"
                return "$ret_code"
            elif [[ "$ret_code" != '0' ]]; then
                echo 'failurino'
                return "$ret_code"
            fi
        fi
        toggle_mount::send_notification "Mounted" "$name"
    fi
}

toggle_mount::nfs() {
    declare mount_source="${1%/}"

    declare name
    name="$(toggle_mount::get_mount_name "$mount_source")"
    declare mount_destination
    mount_destination="$(toggle_mount::get_mount_destination "$name")"

    if toggle_mount::is_mounted "$mount_destination"; then
        sudo umount "$mount_destination"
        sudo rmdir "$mount_destination"
        toggle_mount::send_notification "Unmounted" "$name"
    else
        sudo mkdir -m '0777' -p "$mount_destination"
        sudo mount -t 'nfs4' "$mount_source" "$mount_destination"
        toggle_mount::send_notification "Mounted" "$name"
    fi
}

toggle_mount::ssh() {
    declare mount_source="${1%/}"

    declare name
    name="$(toggle_mount::get_mount_name "$mount_source")"
    declare mount_destination
    mount_destination="$(toggle_mount::get_mount_destination "$name")"

    if toggle_mount::is_mounted "$mount_destination"; then
        fusermount -u "$mount_destination"
        sudo rmdir "$mount_destination"
        toggle_mount::send_notification "Unmounted" "$name"
    else
        sudo mkdir -m 0777 -p "$mount_destination"
        # TODO: -oworkaround=all, isn't working on linux atm
        sshfs -oreconnect,compression=yes,ServerAliveCountMax=3 "$mount_source" "$mount_destination"
        toggle_mount::send_notification "Mounted" "$name"
    fi
}

if [[ "$#" != 2 ]]; then
    toggle_mount::usage
    exit 1
fi

case "$1" in
    smb)
        toggle_mount::smb "${@:2}"
        ;;
    nfs)
        toggle_mount::nfs "${@:2}"
        ;;
    ssh)
        toggle_mount::ssh "${@:2}"
        ;;
    *)
        toggle_mount::usage
        exit 1
        ;;
esac
