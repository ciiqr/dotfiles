{
    "todohighlight.keywords": [
        // warnings
        { "color": "#FDDD6C", "backgroundColor": "#44403C", "text": "TODO" },
        { "color": "#FDDD6C", "backgroundColor": "#44403C", "text": "NOTE" },
        { "color": "#FDDD6C", "backgroundColor": "#44403C", "text": "SEE" },
        { "color": "#FDDD6C", "backgroundColor": "#44403C", "text": "SOURCES" },
        { "color": "#FDDD6C", "backgroundColor": "#44403C", "text": "SOURCE" },
        { "color": "#FDDD6C", "backgroundColor": "#44403C", "text": "README" },
        { "color": "#FDDD6C", "backgroundColor": "#44403C", "text": "@todo" },
        { "color": "#FDDD6C", "backgroundColor": "#44403C", "text": "XXX" },
        { "color": "#FDDD6C", "backgroundColor": "#44403C", "text": "WIP" },
        // errors
        { "color": "#DB2777", "backgroundColor": "#44403C", "text": "FIXME" },
        { "color": "#DB2777", "backgroundColor": "#44403C", "text": "<<<<<<<" },
        { "color": "#DB2777", "backgroundColor": "#44403C", "text": ">>>>>>>" },
        { "color": "#DB2777", "backgroundColor": "#44403C", "text": "=======" }
    ],
    // theme
    "workbench.colorTheme": "Kaio",
    "workbench.iconTheme": "vs-seti",
    "editor.fontSize": 20,
    "editor.fontFamily": "Inconsolata, Menlo, Monaco, 'Courier New', monospace",
    // workbench
    "workbench.settings.editor": "json",
    "workbench.settings.openDefaultKeybindings": false,
    "workbench.settings.openDefaultSettings": false,
    "workbench.activityBar.location": "hidden",
    "workbench.editor.empty.hint": "hidden",
    "workbench.panel.defaultLocation": "left",
    "workbench.startupEditor": "newUntitledFile",
    "workbench.editor.focusRecentEditorAfterClose": false,
    "breadcrumbs.enabled": false,
    // fun fact, if you accidentally activate the breadcrumb keybinding, it'll just remove this setting and any comments above it... "breadcrumbs.enabled": false,
    // editor
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
        "source.fixAll.eslint": "explicit"
        // SOURCE: https://github.com/typescript-language-server/typescript-language-server#code-actions-on-save
        // NOTE: not reasonable to keep enabled, but occasionally useful
        // "source.fixAll.ts": "explicit"
        // "source.addMissingImports.ts": "explicit"
        // "source.removeUnused.ts": "explicit"
    },
    "editor.rulers": [80, 100, 120],
    "editor.minimap.maxColumn": 10,
    "editor.minimap.scale": 2,
    "editor.minimap.renderCharacters": false,
    "editor.minimap.showSlider": "always",
    "editor.renderLineHighlight": "all",
    "editor.showFoldingControls": "always",
    "editor.cursorBlinking": "solid",
    "editor.cursorStyle": "line-thin",
    "editor.scrollbar.vertical": "hidden",
    "editor.scrollbar.verticalScrollbarSize": 0,
    "editor.matchBrackets": "never",
    "editor.snippetSuggestions": "bottom",
    "editor.multiCursorLimit": 100000,
    "editor.scrollbar.horizontal": "hidden",
    "editor.lightbulb.enabled": "off",
    "subtleBrackets.disableNative": false,
    // suggestions
    "editor.suggest.showWords": false,
    "editor.suggest.showSnippets": false,
    "editor.acceptSuggestionOnCommitCharacter": false,
    // files
    "files.trimTrailingWhitespace": true,
    "files.trimFinalNewlines": true,
    "files.insertFinalNewline": true,
    "files.associations": {
        ".browserslistrc": "plaintext",
        ".hushlogin": "plaintext",
        "turbo.json": "jsonc",
        ".env.*": "properties"
    },
    "shellcheck.ignorePatterns": {
        "**/.zcompletions/**/*": true,
        "**/.env.*": true
    },
    "files.exclude": {
        "**/dist": true,
        "**/node_modules": true,
        "**/.next": true,
        "**/*.android.bundle": true,
        ".stversions": true,
        ".husky/_": true,
        // NOTE: doesn't override .gitignore... instead add a .ignore with: !.env.local
        // ".env.local": false,
        ".stfolder": true
    },
    "search.exclude": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/*.code-search": true,
        "vendor": true
        // NOTE: doesn't override .gitignore... instead add a .ignore with: !.env.local
        // ".env.local": false,
    },
    // status bar
    "git.enableStatusBarSync": false,
    // search
    // TODO: want project/open files in quick open, not history...
    "search.quickOpen.includeHistory": false,
    // macos
    "window.nativeTabs": true,
    // project manager
    "projectManager.cacheProjectsBetweenSessions": false, // TODO: experimenting to see if this fixes issues with it randomly forgetting about projects (even when the project is open in a window)
    "projectManager.showProjectNameInStatusBar": false,
    "projectManager.ignoreProjectsWithinProjects": true,
    "projectManager.any.maxDepthRecursion": 1,
    "projectManager.sortList": "Recent",
    "projectManager.git.baseFolders": [
        "~/Projects",
        "~/External",
        "~/pentible",
        "~/work"
    ],
    "projectManager.projectsLocation": "~/Projects/.projects",
    "projectManager.git.ignoredFolders": [
        "node_modules",
        "out",
        "typings",
        "test",
        ".stversions",
        // ignored projects:
        "dotfiles",
        "dotfiles-private",
        "nk",
        "nk-plugins"
    ],
    // prettier
    "prettier.proseWrap": "always",
    "prettier.trailingComma": "all",
    // "prettier.requireConfig": true,
    // customize ui
    // "customizeUI.stylesheet": {
    //     ".editor-actions": "display: none !important;"
    // },
    // language settings
    // "workbench.editor.historyBasedLanguageDetection": true,
    "workbench.editor.languageDetection": false,
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[graphql]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[handlebars]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[jsonc]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[yaml]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[dockerfile]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[markdown]": {
        "editor.wordWrap": "off"
    },
    "[html]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[css]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[terraform]": {
        "editor.defaultFormatter": "hashicorp.terraform"
    },
    "[shellscript]": {
        // TODO: would be nice to use prettier for projects that have the sh plugin... (maybe just install it globally?)
        "editor.defaultFormatter": "mads-hartmann.bash-ide-vscode"
    },
    "[csharp]": {
        "workbench.editor.languageDetection": false
    },
    // rust
    "rust-analyzer.check.command": "clippy",
    "rust-analyzer.inlayHints.typeHints.enable": false,
    // target override when working on windows:
    // "rust-analyzer.cargo.target": "x86_64-pc-windows-msvc",
    "rust-analyzer.diagnostics.disabled": ["unlinked-file"],
    // typescript
    "typescript.preferences.importModuleSpecifier": "non-relative",
    "javascript.preferences.importModuleSpecifier": "non-relative",
    "typescript.tsdk": "./node_modules/typescript/lib",
    "typescript.enablePromptUseWorkspaceTsdk": true,
    // "typescript.inlayHints.variableTypes.enabled": true,
    // "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
    // TODO: consider some paths that would be globally useful to ignore
    // "typescript.preferences.autoImportFileExcludePatterns": [],
    "tsEssentialPlugins.patchOutline": true,
    "tsEssentialPlugins.suggestions.localityBonus": true,
    "tsEssentialPlugins.fixSuggestionsSorting": true,
    // TODO: seems to break forward ref components...
    // "tsEssentialPlugins.experiments.excludeNonJsxCompletions": true,
    // eslint
    "eslint.codeAction.showDocumentation": {
        "enable": false
    },
    "eslint.problems.shortenToSingleLine": true,
    "eslint.rules.customizations": [
        // set all eslint errors/warnings to show as warnings
        { "rule": "*", "severity": "warn" },
        // disable some rules in editor (they're just annoying while coding)
        { "rule": "import/no-unused-modules", "severity": "off" }
    ],
    // tailwind
    "tailwindCSS.experimental.classRegex": [
        // cva
        ["cva\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"],
        ["cx\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"]
    ],
    // npm
    "dependi.npm.enabled": false,
    // shell
    "bashIde.shfmt.caseIndent": true,
    "bashIde.shfmt.binaryNextLine": true,
    "bashIde.shfmt.spaceRedirects": true,
    "shellcheck.exclude": [
        // disable: Expressions don't expand in single quotes, use double quotes for that.
        "SC2016",
        // disable: Possible misspelling: DATABASE_URL may not be assigned. Did you mean database_url?
        // NOTE: this rule doesn't respect the context it's operating in (so variables defined exclusively in other function, that don't call the current one, will can cause this error to occur)
        "SC2153"
    ],
    // terraform
    "terraform.languageServer.ignoreSingleFileWarning": true,
    // sql
    "sql-formatter.uppercase": true,
    // yaml
    "yaml.schemas": {
        "https://json.schemastore.org/github-workflow": "/.github/workflows/*.yml",
        // TODO: we should setup a schema...
        "": "plugin.yml"
    },
    // powershell
    "powershell.codeFormatting.alignPropertyValuePairs": false,
    // lua/wow
    "Lua.runtime.version": "Lua 5.1",
    "Lua.format.defaultConfig": {
        // TODO: figure out, maybe put in repo config...
        // "max_line_length": "80"
    },
    // codespaces
    "terminal.integrated.defaultProfile.linux": "zsh",
    // disable peek
    "editor.gotoLocation.multipleDefinitions": "goto",
    "editor.gotoLocation.multipleDeclarations": "goto",
    "editor.gotoLocation.multipleImplementations": "goto",
    "editor.gotoLocation.multipleReferences": "gotoAndPeek",
    "editor.gotoLocation.multipleTypeDefinitions": "goto",
    // spelling
    "cSpell.dictionaries": ["node", "npm"],
    "cSpell.language": "en,en-GB",
    "#cSpell.enableFiletypes": ["note", "toml", "makefile"],
    "cSpell.userWords": [
        "ableton",
        "alloydb",
        "automatable",
        "autoscale",
        "autoscales",
        "backblaze",
        "boop",
        "booped",
        "boops",
        "ciiqr",
        "clippy",
        "codespaces",
        "compdef",
        "consts",
        "ddns",
        "devcontainer",
        "devshell",
        "diablo",
        "dlna",
        "dotfiles",
        "eeby",
        "entrypoints",
        "esac",
        "hookform",
        "idempotency",
        "ILIKE",
        "imdb",
        "Inconsolata",
        "kaio",
        "karabiner",
        "knex",
        "marshallers",
        "meep",
        "meeps",
        "middlewares",
        "Monokai",
        "morp",
        "neovim",
        "nextjs",
        "ngram",
        "onboarded",
        "passwordless",
        "pentible",
        "pixi",
        "planetscale",
        "pmset",
        "POSIX",
        "psql",
        "pulumi",
        "raidz2",
        "reindent",
        "releaseroni",
        "runtimes",
        "rustup",
        "scrollbars",
        "sharded",
        "siri",
        "sortablejs",
        "stfolder",
        "stignore",
        "stylesheet",
        "syncthing",
        "thrizen",
        "tldr",
        "trackpad",
        "trackpads",
        "traefik",
        "trpc",
        "truenas",
        "unstaged",
        "upsert",
        "upserts",
        "upstreams",
        "vercel",
        "vitess",
        "websockets",
        "winget",
        "Yugabyte",
        "yugabytedb"
    ],
    "cSpell.ignoreWords": [
        // vscode
        "browserslistrc",
        "esbenp",
        "Menlo",
        "seti",
        "stversions",
        "todohighlight",

        // misc
        "healthz",
        "hookspath",
        "loglevel",
        "shellcheck",
        "restic",
        "muxit",
        "cloudnative",
        "clusterissuer",
        "ghostty",

        // javascript
        "deepmerge",
        "esbuild",
        "execa",
        "fontawesome",
        "fontsource",
        "fortawesome",
        "superjson",
        "tailwindcss",
        "tanstack",
        "nodemailer",
        "mailhog",
        "millis",
        "fkey",
        "paralleldrive",
        "tsup",
        "nativewind",
        "moderndash",
        "tauri",
        "ptat",
        "nodenext",
        "nonconstructor",
        "undici",
        "npmcli",
        "bunchee",

        // react-native
        "pressable",

        // cavalier
        "Innertube",
        "youtubei",

        // rust
        "serde",
        "shellexpand",
        "aarch64",
        "msvc",

        // dotfiles/shell
        "hushlogin",
        "zcompletions",
        "mindepth",
        "maxdepth",
        "mktemp",

        // macos
        "softwareupdate",

        // windows
        "choco",
        "hkey",
        "dword",
        "gridmove",
        "userprofile",
        "zygor",
        "HSTRING",

        // stripe
        "acss_debit",
        "AcssDebit",
        "testmode",

        // Adyen
        "adyen",

        // sql
        "datetime",

        // truenas
        "authentik",
        "midclt",
        "auxsmbconf",
        "truecharts",
        "tvdb",

        // git
        "textconv",

        // cockroachdb
        "cockroachdb",
        "crdb",

        // sops
        "rops",

        // neon db
        "neonctl"
    ],
    "cSpell.ignoreRegExpList": [
        // stripe
        "\\b(pi_.+)",

        // age public keys
        "\\b(age1.+)"
    ],
    // gremlins
    "gremlins.showInProblemPane": true,
    "gremlins.characters": {
        "2215": {
            "description": "Division Slash",
            "level": "error"
        },
        "2044": {
            "description": "Fraction Slash",
            "level": "error"
        }
    },
    // telemetry
    "telemetry.telemetryLevel": "off",
    "redhat.telemetry.enabled": false,
    // misc
    "workbench.editor.enablePreview": false,
    "security.workspace.trust.untrustedFiles": "open",
    "emmet.showExpandedAbbreviation": "never",
    // "extensions.ignoreRecommendations": true,
    "git.openRepositoryInParentFolders": "never",
    "svg.preview.background": "dark-transparent",
    "window.customTitleBarVisibility": "never",
    "window.zoomLevel": -1,
    "editor.stopRenderingLineAfter": 50000,
    "editor.maxTokenizationLineLength": 100000,
    "diffEditor.ignoreTrimWhitespace": false,
    "diffEditor.maxComputationTime": 20000,
    "window.confirmSaveUntitledWorkspace": false,
    "update.showReleaseNotes": false,
    "prisma.showPrismaDataPlatformNotification": false,
    "svg.preview.mode": "svg",
    "lldb.suppressUpdateNotifications": true
}
