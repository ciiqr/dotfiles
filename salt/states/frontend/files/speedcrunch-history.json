{
    "functions": [
        {
            "args": [
                "x"
            ],
            "expression": "x * 1.27",
            "name": "USDCAD"
        },
        {
            "args": [
                "x"
            ],
            "expression": "x / USDCAD(1)",
            "name": "CADUSD"
        },
        {
            "args": [
                "purchase",
                "target",
                "years"
            ],
            "expression": "(target/purchase)^(1/years) - 1",
            "name": "CAGR"
        },
        {
            "args": [
                "income"
            ],
            "expression": "MIN(income; 49020) * .15 +MAX(MIN(income - (49020 + 1); 98040 - (49020 + 1)); 0) * .2050 +MAX(MIN(income - (98040 + 1); 151978 - (98040 + 1)); 0) * .26 +MAX(MIN(income - (151978 + 1); 216511 - (151978 + 1)); 0) * .29 +MAX(income - (216511 + 1); 0) * .33 +MIN(income; 45142) * .0505 +MAX(MIN(income - (45142 + 1); 90287 - (45142 + 1)); 0) * .0915 +MAX(MIN(income - (90287 + 1); 150000 - (90287 + 1)); 0) * .1116 +MAX(MIN(income - (150000 + 1); 220000 - (150000 + 1)); 0) * .1216 +MAX(income - (220000 + 1); 0) * .1316",
            "name": "income_taxes"
        },
        {
            "args": [
                "income"
            ],
            "expression": "need to account for CPP/EI",
            "name": "income_taxes_need_to_fix_other_func"
        },
        {
            "args": [
                "income"
            ],
            "expression": "income - income_taxes(income)",
            "name": "take_home"
        },
        {
            "args": [
                "x"
            ],
            "expression": "x - (x * .5 * .47)",
            "name": "approx_capital_gains"
        },
        {
            "args": [
                "x"
            ],
            "expression": "x * 1000",
            "name": "thousand"
        },
        {
            "args": [
                "x"
            ],
            "expression": "x * 1,000,000",
            "name": "million"
        },
        {
            "args": [
                "x"
            ],
            "expression": "x * 1,000,000,000",
            "name": "billion"
        },
        {
            "args": [
                "x"
            ],
            "expression": "x * 1,000,000,000,000",
            "name": "trillion"
        }
    ],
    "history": [],
    "variables": [],
    "version": "0.12"
}
