#!/usr/bin/env bash

export EDITOR='edit'
export PAGER='less'
export LESS='-R -F'
export TIMEFMT='Real: %E User: %U System: %S Percent: %P Cmd: %J'
export GPG_TTY="$(tty)"
export PYTHONSTARTUP="${HOME}/.pythonstartup.py"
# TODO: is this used? export FILEMANAGER='spacefm'

# tabs = 4 spaces
if type setterm >/dev/null 2>&1; then
    TERM=linux setterm -regtabs 4
elif type tabs >/dev/null 2>&1; then
    tabs -4
fi

alias grep='grep --color'
alias egrep='egrep --color'
alias man='man -a'
alias rm=' rm' # don't keep rm in history
alias sudo='sudo ' # Enable aliases to be sudoâ€™ed
alias ls='ls --color=auto'
alias l='ls -A'
alias ll='ls -alF'
alias '?'='type -af'
alias map='xargs -n1'
alias epoch='date "+%s"'
alias ymd='date "+%Y-%m-%d"'
alias broken-links='find . -type l -exec test ! -e {} ";" -print'
alias perms='stat -c "%A %a %n"'
alias m='macro'
alias mr='macro run'
alias todo='git-find-changed-repos ~/{Projects,External,pentible,lane}'

gcd()
{
    declare root="$(git rev-parse --show-toplevel)"
    if [[ -z "$root" ]]; then
        return 1
    fi

    cd "${root}/${@}"
}

# syncthing
if [[ "$DOTFILES_HOSTNAME" == 'server-data' ]]; then
    alias syncthing-conflicts='find /mnt/data/William/Sync/{Docs,Projects,Inbox,Screenshots,.wallpapers,.archive} -iname "*.sync-conflict-*"'
else
    alias syncthing-conflicts='find ~/{Docs,Projects,Inbox,Screenshots,.wallpapers,.archive} -iname "*.sync-conflict-*"'
fi

# ssh
if command-exists ssh-keygen; then
    alias ssh-keygen='ssh-keygen -t rsa -b 4096 -o -N ""'
    alias ssh-fingerprint='ssh-keygen -l -E md5 -f' # get ssh key fingerprint same way as github
fi

# http
if command-exists curl; then
    alias remote-ip='curl icanhazip.com'
elif command-exists wget; then
    alias remote-ip='wget -qO- icanhazip.com'
fi

# pacman
if command-exists pacman; then
    alias pkgbuild-install='makepkg -f && sudo pacman -U *.pkg.tar.xz'
fi

# xdg-open
if command-exists xdg-open; then
    alias open='xdg-open'
fi

# x11
if command-exists xsel; then
    alias clipboard='xsel -b'
    alias x11-clipboard='xsel -p'
fi
if command-exists xdotool; then
    alias minimize-current='xdotool windowminimize $(xdotool getactivewindow)'
fi
if command-exists xev; then
    alias xev='xev -rv -name xev-is-special'
    alias xev-keys="xev | grep -A2 --line-buffered '^KeyRelease' | sed -n '/keycode /s/^.*keycode \([0-9]*\).* (.*, \(.*\)).*$/\1 \2/p'"
fi
if command-exists xprop; then
    alias xprop="xprop | grep -v ^$'\t[^\w\t]' | tr -s '\n'"
    alias window-info='xprop; xwininfo'
fi

# Kubernetes
if command-exists kubectl; then
    alias k='kubectl'
    alias krun='~/.scripts/kubernetes.sh run'
    alias pkubectl='~/.scripts/kubernetes.sh pkubectl'
    alias pk='pkubectl'
    alias kubectl-all-resources='printf "%s" "$(kubectl api-resources --verbs=list --namespaced -o name | grep -v -e "^events.events.k8s.io$" -e "^events$")" | tr $"\n" ","'
    alias kubectl-get-all='kubectl get "$(kubectl-all-resources)"'
fi
if command-exists kubectx; then
    alias ktx=kubectx
fi

# Docker
if command-exists docker; then
    alias drun='docker run --rm -it'
fi
if command-exists docker-compose; then
    alias dc=docker-compose
fi

# Vagrant
if command-exists vagrant; then
    alias vag='vagrant'
fi

# Terraform
if command-exists terraform; then
    alias tf='terraform'
fi

# Salt
if command-exists salt-call; then
    alias sc='sudo salt-call'
fi

# npm
if command-exists npm; then
    alias npr='npm run'
    alias nanoid-base62='npx nanoid -a "$(printf "%s" {0..9} {A..Z} {a..z})" --size 24'
fi
if command-exists jq; then
    alias package-lock-summary='jq ".dependencies | to_entries | map({ (.key): .value.version }) | add"'
fi

# rust
if command-exists rustfmt && command-exists cargo; then
    alias rust-lint='rustfmt src/**/*.rs --check; cargo clippy --quiet'
fi

# server
if [[ -f '/opt/ciiqr/home/docker-compose.yml' ]]; then
    alias dc='docker-compose -f /opt/ciiqr/home/docker-compose.yml'
fi
if [[ -f '/opt/ciiqr/home/docker-compose.crons.yml' ]]; then
    alias dc-crons='docker-compose -f /opt/ciiqr/home/docker-compose.crons.yml'
    alias backup='dc-crons run --rm backup'
    alias restic='dc-crons run --rm backup restic'
fi

# Projects
if [[ -d ~/Projects/nk/ ]]; then
    alias nk='cargo run --manifest-path ~/Projects/nk/Cargo.toml -q --'
fi
if [[ -d ~/pentible/typescript-standards ]]; then
    # alias pt-create-package='npx ts-node --transpileOnly ~/pentible/typescript-standards/packages/create-package/src/index.ts'
    alias pt-create-package='~/pentible/typescript-standards/packages/create-package/dist/index.js'
fi

# python
if command-exists pyenv; then
    eval "$(pyenv init -)"
fi

# direnv
if command-exists direnv; then
    export DIRENV_LOG_FORMAT=
    # TODO: decide:
    # direnv allow ~/Projects/* ~/pentible/* 2>/dev/null
fi

. source-if-exists "${HOME}/.shared_rc.d/${DOTFILES_PLATFORM}"
. source-if-exists "${HOME}/.shared_rc.d/${DOTFILES_HOSTNAME}"
