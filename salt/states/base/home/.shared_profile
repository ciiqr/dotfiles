#!/usr/bin/env bash

export PATH="${HOME}/.local/bin:${PATH}"

export DOTFILES_HOSTNAME="$(~/.scripts/system.sh get-hostname)"
export DOTFILES_PLATFORM="$(~/.scripts/system.sh get-platform)"
# TODO: export DOTFILES_OS

# lua
if command-exists luarocks; then
    eval "$(luarocks path)"
fi

# ruby
if command-exists ruby && command-exists gem; then
    export PATH="$(ruby -r rubygems -e 'puts Gem.user_dir')/bin:${PATH}"
fi

# python
if [[ -d "${HOME}/.pyenv" ]]; then
    export PYENV_ROOT="${HOME}/.pyenv"
    export PATH="${PYENV_ROOT}/bin:${PATH}"
fi
if command-exists pyenv; then
    eval "$(pyenv init --path)"
fi

# flutter
if [[ -d "${HOME}/.pub-cache/bin" ]]; then
    export PATH="${PATH}:${HOME}/.pub-cache/bin"
fi

# google-chrome
if command-exists google-chrome-stable; then
    export CHROME_EXECUTABLE='google-chrome-stable'
elif command-exists chromium; then
    export CHROME_EXECUTABLE='chromium'
fi

if command-exists ssh-agent; then
    # NOTE: sockets created in windows filesystems in wsl don't work, so we force it to be created on the linux only fs
    if ~/.scripts/system.sh is-windows; then
        # NOTE: not using the home dir since we're mounting that to be the windows user's home dir
        mkdir -p "/home/${USER}/.ssh"
        export SSH_AUTH_SOCK="/home/${USER}/.ssh/ssh-agent.${HOSTNAME:-$HOST}.sock"
    else
        export SSH_AUTH_SOCK="${HOME}/.ssh/ssh-agent.${HOSTNAME:-$HOST}.sock"
    fi

    # NOTE: can kill the agent with: eval $(ssh-agent -k)
    if ! ssh-add -l >/dev/null 2>&1; then
        rm -f "${SSH_AUTH_SOCK}" # >/dev/null 2>&1
        eval $(ssh-agent -s -a "$SSH_AUTH_SOCK") >/dev/null

        if [[ -d "${HOME}/.ssh/keys" ]]; then
            while IFS= read -r -d $'\0' key; do
                ssh-add "$key" 2>/dev/null
            done < <(find "${HOME}/.ssh/keys" ! -type d ! -iname '*.pub' -print0)
        fi
    fi
fi

# nix
. source-if-exists ~/.nix-profile/etc/profile.d/nix.sh

# TODO: need a better way of handling stuff like this...
. source-if-exists ~/.shared_profile.d/private-development

. source-if-exists "${HOME}/.shared_profile.d/${DOTFILES_PLATFORM}"
. source-if-exists "${HOME}/.shared_profile.d/${DOTFILES_HOSTNAME}"

# update path with external processes
if command-exists systemctl; then
    systemctl --user import-environment PATH
fi
if command-exists launchctl; then
    launchctl setenv PATH "$PATH"
fi
