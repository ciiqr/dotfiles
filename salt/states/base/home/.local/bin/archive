#!/usr/bin/env bash

set -e

archive::usage()
{
    echo 'usage:'
    echo '  archive extract <archive>'
    echo '  archive compress <archive> [<file>...]'
}

archive::_prepare_extract_directory()
{
    declare directory="./${1}"
    if [[ -d "$directory" ]]; then
        directory="${directory}-$(tr -dc 'a-zA-Z0-9' < /dev/urandom | head -c 8)"
    fi

    mkdir "$directory"
    cd "$directory"
}

archive::extract()
{
    if (( "$#" == 0 )); then
        archive::usage
        exit 1
    fi

    declare file="$1"
    declare archive="$(realpath "$file")"
    declare basename="$(basename "$archive")"

    case "$archive" in
        *.7z)
            archive::_prepare_extract_directory "${basename%.7z}"
            7z x "$archive"
            ;;
        *.zip)
            archive::_prepare_extract_directory "${basename%.zip}"
            unzip "$archive"
            ;;
        *.tar)
            archive::_prepare_extract_directory "${basename%.tar}"
            tar xf "$archive"
            ;;
        *.tar.gz)
            archive::_prepare_extract_directory "${basename%.tar.gz}"
            tar xzf "$archive"
            ;;
        *.tgz)
            archive::_prepare_extract_directory "${basename%.tgz}"
            tar xzf "$archive"
            ;;
        *.tar.Z)
            archive::_prepare_extract_directory "${basename%.tar.Z}"
            tar xzf "$archive"
            ;;
        *.taz)
            archive::_prepare_extract_directory "${basename%.taz}"
            tar xzf "$archive"
            ;;
        *.tar.bz2)
            archive::_prepare_extract_directory "${basename%.tar.bz2}"
            tar xjf "$archive"
            ;;
        *.tbz2)
            archive::_prepare_extract_directory "${basename%.tbz2}"
            tar xjf "$archive"
            ;;
        *.rar)
            archive::_prepare_extract_directory "${basename%.rar}"
            unrar x "$archive"
            ;;
        # TODO: make single files rename like dirs above
        # Single file compression commands decompress directly without an intermediate directory
        *.gz)
            gunzip -k "$archive"
            ;;
        *.bz2)
            bunzip2 -k "$archive"
            ;;
        *.Z)
            uncompress -k "$archive"
            ;;
        *)
            echo "unknown archive format: ${file}"
            ;;
    esac
}

archive::compress()
{
    if (( "$#" < 2 )); then
        archive::usage
        exit 1
    fi

    # TODO: make sure archive doesn't exist
    declare file="$1"
    declare archive="$(realpath "$file")"
    declare -a files=("${@:2}")

    case "$archive" in
        *.7z)
            7z a "$archive" "${files[@]}"
            ;;
        *.zip)
            zip -r "$archive" "${files[@]}"
            ;;
        *.tar)
            tar cf "$archive" "${files[@]}"
            ;;
        *.tar.gz)
            tar czf "$archive" "${files[@]}"
            ;;
        *.tgz)
            tar czf "$archive" "${files[@]}"
            ;;
        *.tar.Z)
            tar czf "$archive" "${files[@]}"
            ;;
        *.taz)
            tar czf "$archive" "${files[@]}"
            ;;
        *.tar.bz2)
            tar cjf "$archive" "${files[@]}"
            ;;
        *.tbz2)
            tar cjf "$archive" "${files[@]}"
            ;;
        *.rar)
            rar a "$archive" "${files[@]}"
            ;;
        # TODO: enforce a single file
        # # Single file compression commands must only provide a single file
        *.gz)
            gzip -c "${files[@]}" > "$archive"
            ;;
        *.bz2)
            bzip2 -c "${files[@]}" > "$archive"
            ;;
        *.Z)
            gzip -c -S .Z "${files[@]}" > "$archive"
            ;;
        *)
            echo "unknown archive format: ${file}"
            ;;
    esac
}

main()
{
    case "$1" in
        extract)
            archive::extract "${@:2}"
            ;;
        compress)
            archive::compress "${@:2}"
            ;;
        *)
            archive::usage
            exit 1
            ;;
    esac
}

main "$@"
