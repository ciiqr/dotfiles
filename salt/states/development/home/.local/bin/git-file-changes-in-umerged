#!/usr/bin/env bash

trim_lines()
{
    awk '{$1=$1};1'
}

# TODO: change to a git script/alias so it can be reused
git_assumed_default_branch()
{
    if git show-ref --verify --quiet refs/heads/main; then
        echo 'main'
    elif git show-ref --verify --quiet refs/heads/master; then
        echo 'master'
    elif git show-ref --verify --quiet refs/heads/develop; then
        echo 'develop'
    else
        echo "$0: could not determine default branch for repo" 1>&2
        return 1
    fi
}

main()
{
    declare ignore_branches="$1"
    declare path="$2"

    if [[ -z "$path" ]]; then
        echo "usage: $0 <ignore-branches> <path>"
        echo "   ie. $0 'staging|uat' package-lock.json"
        return 1
    fi

    declare default_branch="$(git_assumed_default_branch)"
    if [[ -z "$default_branch" ]]; then
        return 1
    fi

    # TODO: should I change this to origin/{default_branch}?
    unmerged_branches="`git branch --no-merged "$default_branch" --remote | trim_lines | egrep -v "/($ignore_branches)$"`"

    for branch in $unmerged_branches; do
        :
        # If the branch has changes for the file
        declare show_output="`git show "$branch" "$path"`"
        if [[ ! -z "$show_output" ]]; then
            echo "$branch"
        fi
    done
}

main "$@" || exit $?
