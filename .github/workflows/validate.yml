name: validate
on:
  workflow_dispatch: # Manually trigger
  schedule:
    - cron: "0 13 1 * *" # 1st of every month at 1pm UTC
jobs:
  validate:
    name: Validate
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-13
          - ubuntu-latest
          # TODO: consider...
          # - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ciiqr/nk-plugins
          path: nk-plugins
      - uses: actions/checkout@v3
        with:
          path: ${{ github.event.repository.name }}
      - name: Macos Hacks
        run: |
          # my config installs python-yq, which conflicts with the 'yq' package actions runners have installed
          brew unlink yq

          # actions have python 3.11 already installed (not through brew), so when other packages try to install the brew version, they run into conflicts linking binaries
          brew install python@3.11 --overwrite
          brew install python-argcomplete --overwrite

          # TODO: pretty sure these exist by default? (if not I'll find out when I setup a fresh machine next)
          mkdir ~/Public ~/Applications ~/Music ~/Pictures

          mkdir ~/.backup
        if: runner.os == 'macOS'
      - name: Install nk
        run: |
          curl -fsSL 'https://raw.githubusercontent.com/ciiqr/nk/HEAD/install.sh' | bash
          echo "${HOME}/.nk/bin" >> $GITHUB_PATH
          ~/.nk/bin/nk -v
      - name: Provision
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export TERM=xterm-256color
          nk provision --show-unchanged | tee nk-log.txt | ./home/.local/bin/noteify
          # preserve exit status of nk itself
          exit "${PIPESTATUS[0]}"
        working-directory: ${{ github.event.repository.name }}
        timeout-minutes: 45
      - name: Upload log
        uses: actions/upload-artifact@v3
        with:
          name: nk-log
          path: ${{ github.event.repository.name }}/nk-log.txt
        if: always()
